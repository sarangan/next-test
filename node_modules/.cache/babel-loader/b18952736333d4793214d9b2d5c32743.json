{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nimport { withRouter } from \"next/router\";\nimport Layout from \"../components/MyLayout\";\nvar ContentRouter = withRouter(function (props) {\n  return React.createElement(\"div\", null, React.createElement(\"h1\", null, props.router.query.title), React.createElement(\"p\", null, \"without router.\"));\n});\n\nvar Content = function Content(props) {\n  return React.createElement(\"div\", null, React.createElement(\"h1\", null, props.router.query.title), React.createElement(\"p\", null, \"This is the blog post content.\"));\n};\n\nvar Post = withRouter(function (props) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, props.router.query.title), React.createElement(\"h1\", null, props.router.query.id), React.createElement(\"p\", null, \" This is a blog post\"), React.createElement(ContentRouter, null), React.createElement(\"br\", null), React.createElement(\"p\", null, props.summary));\n});\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var summary, id, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            summary = '';\n            id = context.query.id;\n\n            if (!id) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 5;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 5:\n            res = _context.sent;\n            _context.next = 8;\n            return res.json();\n\n          case 8:\n            data = _context.sent;\n            console.log(data);\n            summary = data.show.summary;\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              summary: summary\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["/Users/sara/ReactJs/nextjs/pages/post.js"],"names":["withRouter","Layout","ContentRouter","props","router","query","title","Content","Post","id","summary","getInitialProps","context","fetch","res","json","data","console","log","show"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,aAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,aAAa,GAAGF,UAAU,CAAC,UAAAG,KAAK;AAAA,SAClC,iCACE,gCAAKA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,KAAxB,CADF,EAEE,iDAFF,CADkC;AAAA,CAAN,CAAhC;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAJ,KAAK;AAAA,SACjB,iCACE,gCAAKA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,KAAxB,CADF,EAEE,gEAFF,CADiB;AAAA,CAArB;;AAOA,IAAME,IAAI,GAAGR,UAAU,CAAE,UAACG,KAAD,EAAW;AAChC,SACI,oBAAC,MAAD,QACI,gCAAKA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,KAAxB,CADJ,EAEI,gCAAKH,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBI,EAAxB,CAFJ,EAGI,sDAHJ,EAII,oBAAC,aAAD,OAJJ,EAMI,+BANJ,EAOI,+BAAIN,KAAK,CAACO,OAAV,CAPJ,CADJ;AAWH,CAZsB,CAAvB;;AAeAF,IAAI,CAACG,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACfF,YAAAA,OADe,GACL,EADK;AAEZD,YAAAA,EAFY,GAENG,OAAO,CAACP,KAFF,CAEZI,EAFY;;AAAA,iBAGhBA,EAHgB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIGI,KAAK,wCAAiCJ,EAAjC,EAJR;;AAAA;AAITK,YAAAA,GAJS;AAAA;AAAA,mBAKIA,GAAG,CAACC,IAAJ,EALJ;;AAAA;AAKTC,YAAAA,IALS;AAMfC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,YAAAA,OAAO,GAAGM,IAAI,CAACG,IAAL,CAAUT,OAApB;;AAPe;AAAA,6CAUb;AACFA,cAAAA,OAAO,EAAPA;AADE,aAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAeA,eAAeF,IAAf","sourcesContent":["import {withRouter} from \"next/router\";\nimport Layout from \"../components/MyLayout\";\n\nconst ContentRouter = withRouter(props => (\n    <div>\n      <h1>{props.router.query.title}</h1>\n      <p>without router.</p>\n    </div>\n));\n\nconst Content = props => (\n    <div>\n      <h1>{props.router.query.title}</h1>\n      <p>This is the blog post content.</p>\n    </div>\n);\n\nconst Post = withRouter( (props) => {\n    return (\n        <Layout>\n            <h1>{props.router.query.title}</h1>\n            <h1>{props.router.query.id}</h1>\n            <p> This is a blog post</p>\n            <ContentRouter/>\n\n            <br/>\n            <p>{props.summary}</p>\n        </Layout>\n    );\n}\n);\n\nPost.getInitialProps = async function(context){\n    let summary = '';\n    const {id} = context.query;\n    if(id){\n        const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n        const data = await res.json();\n        console.log(data);\n        summary = data.show.summary;\n    }\n\n    return{\n        summary\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}