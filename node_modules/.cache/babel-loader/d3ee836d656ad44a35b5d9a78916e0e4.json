{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/MyLayout\";\nimport PostLink from \"../components/PostLink\";\nimport Markdown from 'react-markdown';\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, null, React.createElement(\"p\", {\n    className: \"jsx-394687240\"\n  }, \"Hello NextJs\"), React.createElement(\"div\", {\n    className: \"jsx-394687240\" + \" \" + \"markdown\"\n  }, React.createElement(Markdown, {\n    source: \"\\nThis is our blog post.\\nYes. We can have a [link](/link).\\nAnd we can have a title as well.\\n\\n### This is a title\\n\\nAnd here's the content.\\n     \"\n  })), React.createElement(Link, {\n    href: \"/about\"\n  }, React.createElement(\"a\", {\n    title: \"About page\",\n    className: \"jsx-394687240\"\n  }, \"link to about page\")), React.createElement(\"br\", {\n    className: \"jsx-394687240\"\n  }), React.createElement(\"ul\", {\n    className: \"jsx-394687240\"\n  }, React.createElement(PostLink, {\n    id: \"hello-nextjs\",\n    title: \"Hello NextJs\"\n  }), React.createElement(PostLink, {\n    id: \"learn-nextjs\",\n    title: \"Learn NextJs\"\n  }), React.createElement(PostLink, {\n    id: \"deploy-apps-with-nextjs\",\n    title: \"Deploy apps with NextJs\"\n  })), React.createElement(\"br\", {\n    className: \"jsx-394687240\"\n  }), React.createElement(\"ul\", {\n    className: \"jsx-394687240\"\n  }, props.shows.map(function (item) {\n    return React.createElement(\"li\", {\n      key: item.id,\n      className: \"jsx-394687240\"\n    }, React.createElement(Link, {\n      href: \"/post?title=\".concat(item.name, \"&id=\").concat(item.id),\n      as: \"/p/\".concat(item.id, \"/title/\").concat(item.name)\n    }, React.createElement(\"a\", {\n      className: \"jsx-394687240\"\n    }, item.name)));\n  })), React.createElement(_JSXStyle, {\n    id: \"394687240\"\n  }, [\"h1.jsx-394687240,a.jsx-394687240{font-family:'Arial';}\", \"ul.jsx-394687240{padding:0;}\", \"li.jsx-394687240{list-style:none;margin:5px 0;}\", \"a.jsx-394687240{-webkit-text-decoration:none;text-decoration:none;color:blue;}\", \"a.jsx-394687240:hover{opacity :0.6;}\", \".markdown.jsx-394687240{font-family:'Arial';}\", \".markdown.jsx-394687240 a.jsx-394687240{-webkit-text-decoration:none;text-decoration:none;color:blue;}\", \".markdown.jsx-394687240 a.jsx-394687240:hover{opacity:0.6;}\", \".markdown.jsx-394687240 h3.jsx-394687240{margin:0;padding:0;text-transform:uppercase;}\"]));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"show data lenght \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (data) {\n              return data.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}